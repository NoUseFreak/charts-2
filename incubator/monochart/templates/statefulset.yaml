{{- if .Values.statefulset -}}
{{- if .Values.statefulset.enabled -}}
kind: StatefulSet
apiVersion: apps/v1beta1
metadata:
  name: {{ include "common.fullname" . }}
{{- with .Values.statefulset.annotations }}
  annotations:
{{ toYaml . | indent 4 }}
{{- end }}
  labels:
{{ include "common.labels.standard" . | indent 4 }}
{{- with .Values.statefulset.labels }}
{{ toYaml .| indent 4 }}
{{- end }}
spec:
  selector:
    matchLabels:
      app: {{ include "common.name" . }}
      release: {{ .Release.Name }}
  serviceName: {{ include "common.fullname" . }}
  replicas: 1
{{- with .Values.statefulset.strategy }}
  updateStrategy:
{{ toYaml . | indent 4 }}
{{- end }}
  revisionHistoryLimit: {{ .Values.statefulset.revisionHistoryLimit }}
  template:
    metadata:
      name: {{ include "common.fullname" . }}
{{- with .Values.statefulset.pod.annotations }}
      annotations:
{{ toYaml . | indent 8 }}
{{- end }}
      labels:
        app: {{ include "common.name" . }}
        release: {{ .Release.Name | quote }}
        serve: "true"
{{- with .Values.statefulset.pod.labels }}
{{ toYaml .| indent 4 }}
{{- end }}
    spec:
      terminationGracePeriodSeconds: 0
      containers:
      - name: {{ include "common.name" . }}
        image: {{ required "image.repository is required!" .Values.image.repository }}:{{ required "image.tag is required!" .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
{{ include "monochart.env" . | indent 8 }}
        {{- if .Values.statefulset.pod.command }}
        command: {{ .Values.statefulset.pod.command }}
        {{- end }}
        args: {{ .Values.statefulset.pod.args }}
        ports:
{{- range $name, $port := .Values.service.ports }}
        - name: {{ $name }}
          containerPort: {{ $port.internal }}
          protocol: {{ default "TCP" $port.protocol  }}
{{- end }}
        volumeMounts:
        - mountPath: {{ default "/data" (default .Values.persistence.mountPath .Values.statefulset.persistence.mountPath) }}
          name: storage
{{ include "monochart.files.volumeMounts" . | indent 8 }}
{{- with .Values.probes }}
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.resources }}
        resources:
{{ toYaml . | indent 10 }}
{{- end }}
      imagePullSecrets:
{{- if .Values.dockercfg.enabled }}
        - name: {{ include "common.fullname" . }}
{{- end }}
{{- with .Values.image.pullSecrets }}
      {{- range . }}
        - name: {{ . }}
      {{- end }}
{{- end }}
      volumes:
{{ include "monochart.files.volumes" . | indent 6 }}
{{- if not (or .Values.persistence.enabled .Values.statefulset.persistence.enabled) }}
      - name: storage
        emptyDir: {}
{{- else }}
  {{- if not .Values.statefulset.persistence.enabled }}
      - name: storage
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.existingClaim | default (include "common.fullname" .) }}
  {{- else if .Values.statefulset.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: {{ include "common.fullname" . }}-storage
{{- with .Values.statefulset.persistence.annotations }}
      annotations:
{{ toYaml . | indent 8 }}
{{- end }}
      labels:
{{ include "common.labels.standard" . | indent 8 }}
{{- with .Values.statefulset.persistence.labels }}
{{ toYaml .| indent 8 }}
{{- end }}
    spec:
      accessModes:
        - {{ .Values.statefulset.persistence.accessMode | quote }}
      resources:
        requests:
          storage: {{.Values.statefulset.persistence.size | quote }}
    {{- if .Values.statefulset.persistence.storageClass }}
      {{- if (eq "-" .Values.statefulset.persistence.storageClass) }}
      storageClassName: ""
      {{- else }}
      storageClassName: "{{ .Values.statefulset.persistence.storageClass }}"
      {{- end }}
    {{- end }}
    {{- with .Values.statefulset.persistence.selector }}
      selector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- if .Values.statefulset.persistence.volumeName }}
    volumeName: {{ tpl .Values.statefulset.persistence.volumeName . }}
    {{- end }}
  {{- end }}
{{- end }}
{{- end -}}
{{- end -}}
